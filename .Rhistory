some_file <- read.csv("/data/some_file.csv", header = TRUE, sep = ';')
some_file <- read.csv("~/data/some_file.csv", header = TRUE, sep = ';')
getwd()
some_file <- read.csv("/data/0some_file.csv", header = TRUE, sep = ';')
some_file <- read.csv("/data/some_file.csv", header = TRUE, sep = ';')
dir("data")
some_file <- read.csv("data/some_file.csv", header = TRUE, sep = ';')
head(some_file)
class
class(some_file)
class(some_file)
example_data <- data.frame(animal=c("dog", "cat", "sea cucumber", "sea urchin"),
feel=c("furry", "furry", "squishy", "spiny"),
weight=c(45, 8, 1.1, 0.8))
str(example_data)
example_data <- data.frame(animal=c("dog", "cat", "sea cucumber", "sea urchin"),
feel=c("furry", "furry", "squishy", "spiny"),
weight=c(45, 8, 1.1, 0.8), stringsAsFactors=FALSE)
str(example_data)
example_data <- data.frame(animal=c("dog", "cat", "sea cucumber", "sea urchin"),
feel=c("furry", "furry", "squishy", "spiny"),
weight=c(45, 8, 1.1, 0.8))
head(example_data)
example_data <- data.frame(animal=c("dog", "cat", "sea cucumber", "sea urchin"),
feel=c("furry", "furry", "squishy", "spiny"),
weight=c(45, 8, 1.1, 0.8), stringsAsFactors=FALSE)
str(example_data)
author_book <- data.frame(author_first=c("Charles", "Ernst", "Theodosius"),
author_last=c("Darwin", "Mayr", "Dobzhansky"),
year=c(1859, 1942, 1970))
author_book
str(author_book)
country_climate <- data.frame(country=c("Canada", "Panama", "South Africa", "Australia"),
climate=c("cold", "hot", "temperate", "hot/temperate"),
temperature=c(10, 30, 18, "15"),
northern_hemisphere=c(TRUE, TRUE, FALSE, "FALSE"),
has_kangaroo=c(FALSE, FALSE, FALSE, 1))
str(country_climate)
dim(country_climate)
rownames(country_climate)
colnames(country_climate)
names(country_climate)
animals <- c("mouse", "rat", "dog", "cat")
animals
animals[2]
animals[c(3,2)]
animals[2:4]
more_animals <- animals[1:3, 2:4]
more_animals <- animals[c(1:3, 2:4)]
more_animals
seq(50, by=5, length.out = 10)
seq(5, 10, 3)
temperature <- read.csv("data/temperature.csv")
head(temperature)
library(xlsx)
??xlsx
temperature[1, 7]
temperature[1, ]
temperature[ , ncol(temperature)]
temperature[ , "City"]
temperature[ , c("City", "Longitude", "Latitude")]
temperature$City[41009]
barplot(table(temperature$City))
barplot(table(temperature$City))
table(temperature$City)
seq(from = 10, to = ncol(temperature), by = 10)
seq(from = 10, to = row(temperature), by = 10)
seq(from = 10, to = nrow(temperature), by = 10)
temperature_by_10 <- temperature[seq(from = 10, to = nrow(temperature), by = 10), ]
nrow(temperature_by_10)
head(temperature_by_10)
rownames(temperature_by_10)[10]
rownames(temperature_by_10)[1:10]
write.csv(x = temperature_by_10, file = "data/temperature_by_10.csv")
animals
animals == "rat"
which(animals == "rat")
library(dplyr)
temperature <- read.csv("data/temperature.csv")
temperature %>%
select(year, City, Country, AverageTemperatureFahr) %>%
filter(year < 1800) %>%
filter(City == "Lvov")
shapiro.test(runif(1000))
temperature %>% filter(year > 2011, City == "Lvov") %>% select(year, City, Latitude)
temperature %>% filter(year > 2011) %>% select(year, City, Latitude)
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9))
head(temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)))
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
head
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
head()
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
filter(!is.na(AverageTemperatureFahr)) %>%
head
temperature %>% select(country_id, City, year) %>%
mutate(AverageTemperatureCelsius_half = AverageTemperatureCelsiusvalues / 2) %>%
head
temperature %>% select(country_id, City, year) %>%
mutate(AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
head
head(temperature)
temp_new <- temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
filter(!is.na(AverageTemperatureFahr)) %>%
temperature %>%
filter(!is.na(AverageTemperatureFahr)) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
temperature %>% select(country_id, City, year) %>%
temperature %>%
filter(!is.na(AverageTemperatureFahr)) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9))
temperature %>% select(country_id, City, year) %>%
mutate(AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
head
temperature %>% select(country_id, City, year) %>%
mutate(mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
head
temperature %>% select(country_id, City, year) %>%
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)),
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
head
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
head
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
filter(!(is.na(AverageTemperatureCelsius_half))) %>%
head
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half)))
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
filter(!(is.na(AverageTemperatureCelsius_half))) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2)
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2)
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half)))
temperature %>% select(country_id, City, year, AverageTemperatureFahr) %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half))) %>%
head
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half))) %>%
select(country_id, City, year, AverageTemperatureFahr) %>%
head
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half))) %>%
select(country_id, City, year, AverageTemperatureFahr)
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half)) & AverageTemperatureCelsius_half < -7) %>%
select(country_id, City, year, AverageTemperatureFahr) %>%
head
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half)) & AverageTemperatureCelsius_half < -7) %>%
select(country_id, City, year, AverageTemperatureFahr)
temperature %>%
group_by(Country) %>%
tally
temperature %>%
group_by(City) %>%
tally
?tally
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature <- read.csv("data/temperature.csv")
temperature %>%
group_by(Country) %>%
filter(!is.na(Country)) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9),
AverageTemperatureCelsius_half = AverageTemperatureCelsius / 2) %>%
filter(!(is.na(AverageTemperatureCelsius_half)) & AverageTemperatureCelsius_half < -7) %>%
select(country_id, City, year, AverageTemperatureFahr) %>%
head
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9))
filter(!is.na(Country)) %>%
group_by(Country) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9))
filter(!is.na(country))
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
filter(!is.na(country)) %>%
group_by(Country) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
group_by(Country) %>%
filter(!is.na(Country)) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature <- temperature %>% mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9))
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country, City) %>%
summarize(mean_temperature = mean(AverageTemperatureCelsius, na.rm = TRUE))
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country, City) %>%
summarize(mean_temperature = round(mean(AverageTemperatureCelsius, na.rm = TRUE)))
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country, City) %>%
summarize(mean_temperature = round(mean(AverageTemperatureCelsius, na.rm = TRUE)),
round(min(AverageTemperatureCelsius, na.rm = TRUE)))
temperature %>%
filter(!is.na(Country)) %>%
min_temperature = round(min(AverageTemperatureCelsius, na.rm = TRUE)))
group_by(Country, City) %>%
summarize(mean_temperature = round(mean(AverageTemperatureCelsius, na.rm = TRUE)),
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country, City) %>%
summarize(mean_temperature = round(mean(AverageTemperatureCelsius, na.rm = TRUE)),
min_temperature = round(min(AverageTemperatureCelsius, na.rm = TRUE)))
options(digits = 2)
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country, City) %>%
summarize(mean_temperature = round(mean(AverageTemperatureCelsius, na.rm = TRUE)),
min_temperature = round(min(AverageTemperatureCelsius, na.rm = TRUE)))
options(digit = 2)
temperature %>%
filter(!is.na(Country)) %>%
group_by(Country, City) %>%
summarize(mean_temperature = round(mean(AverageTemperatureCelsius, na.rm = TRUE)),
min_temperature = round(min(AverageTemperatureCelsius, na.rm = TRUE)))
library(ggplot2)
library(magrittr)
# modern dataframe manipulations
library(dplyr)
temperature_complete <- temperature_raw %>%
filter(!is.na(City)) %>%
filter(!is.na(Country)) %>%
filter(!is.na(AverageTemperatureFahr)) %>%
filter(!is.na(AverageTemperatureUncertaintyFahr))
library(ggplot2)
library(magrittr)
# modern dataframe manipulations
library(dplyr)
temperature_complete <- temperature_raw %>%
filter(!is.na(City)) %>%
filter(!is.na(Country)) %>%
filter(!is.na(AverageTemperatureFahr)) %>%
filter(!is.na(AverageTemperatureUncertaintyFahr))
temperature_raw <- read.csv("data/temperature.csv")
temperature_complete <- temperature_raw %>%
filter(!is.na(City)) %>%
filter(!is.na(Country)) %>%
filter(!is.na(AverageTemperatureFahr)) %>%
filter(!is.na(AverageTemperatureUncertaintyFahr))
table(temperature_complete$day)
temperature_complete <- select(temperature_complete, -day)
temperature_complete <- temperature_complete %>%
mutate(AverageTemperatureCelsius = (AverageTemperatureFahr-32)*(5/9)) %>%
mutate(AverageTemperatureUncertaintyCelsius = (AverageTemperatureUncertaintyFahr-32)*(5/9))# get rid of `day` column
temperature_complete %>% head
temperature_complete$AverageTemperatureFahr <- NULL
temperature_complete$AverageTemperatureUncertaintyFahr <- NULL
head(temperature_complete)
plot(x = temperature_complete$year,
y = temperature_complete$AverageTemperatureCelsius)
ggplot(data = temperature_complete,
aes(x = year, y = AverageTemperatureCelsius))
ggplot(data = temperature_complete,
aes(x = year, y = AverageTemperatureCelsius)) + geom_point()
ggplot(data = temperature_complete,
aes(x = year, y = AverageTemperatureCelsius)) + geom_point(alpha = 0.1)
ggplot(data = temperature_complete,
aes(x = year, y = AverageTemperatureCelsius)) + geom_point(alpha = 0.1, color = "green")
ggplot(data = temperature_complete, aes( x = counry_id, y = AverageTemperatureCelsius)) +
geom_boxplot()
temperature_complete
names(temperature_complete)
ggplot(data = temperature_complete, aes(x = country_id, y = AverageTemperatureCelsius)) +
geom_boxplot()
ggplot(data = temperature_complete, aes(x = country_id, y = AverageTemperatureCelsius)) +
geom_point(alpha = 0.1, color = "green") +
geom_boxplot()
ggplot(data = temperature_complete, aes(x = country_id, y = AverageTemperatureCelsius)) +
geom_jitter(alpha = 0.1, color = "green") +
geom_boxplot()
ggplot(data = temperature_complete, aes(x = country_id, y = AverageTemperatureCelsius)) +
geom_boxplot() +
geom_jitter(alpha = 0.1, color = "green")
geom_jitter(alpha = 0.1, color = "green")
ggplot(data = temperature_complete, aes(x = country_id, y = AverageTemperatureCelsius)) +
geom_jitter(alpha = 0.05, color = "green")
geom_boxplot() +
geom_jitter(alpha = 0.05, color = "green")
ggplot(data = temperature_complete, aes(x = country_id, y = AverageTemperatureCelsius)) +
geom_violin() +
geom_jitter(alpha = 0.05, color = "green")
yearly_country_temp <- temperature_complete %>%
summarise(countryAverage = mean(AverageTemperatureCelsius))
group_by(year, Country) %>%
yearly_country_temp <- temperature_complete %>%
group_by(year, Country) %>%
summarise(countryAverage = mean(AverageTemperatureCelsius))
yearly_country_temp
ggplot(data = yearly_country_temp, aes(x = year, y = countryAverage)) +
geom_line()
ggplot(data = yearly_country_temp, aes(x = year, y = countryAverage, group = Country)) +
geom_line()
ggplot(data = yearly_country_temp, aes(x = year, y = countryAverage, group = Country, color = Country)) + #by countries
geom_line()
ggplot(data = yearly_country_temp, aes(x = year, y = countryAverage, group = Country, color = Country)) + #by countries
geom_line() +
facet_wrap(~Country)
yearly_city_country_temp <- temperature_complete %>%
group_by(year, City, Country) %>%
summarise(countryAverage = mean(AverageTemperatureCelsius))
ggplot(data = yearly_city_country_temp, aes(x = year, y = countryAverage, group = Country, color = Country)) + #by countries
geom_line() +
facet_wrap(~Country)
yearly_city_country_temp <- temperature_complete %>%
group_by(year, City, Country) %>%
summarise(cityAverage = mean(AverageTemperatureCelsius))
ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = Country, color = Country)) + #by countries
geom_line() +
facet_wrap(~Country)
ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = City, color = City)) + #by countries
geom_line() +
facet_wrap(~Country)
ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = City, color = City)) + #by countries
geom_line() +
theme_bw()
facet_wrap(~Country) +
ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = City, color = City)) + #by countries
facet_wrap(~Country) +
geom_line() +
theme_bw()
ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = City, color = City)) + #by countries
geom_line() +
facet_wrap(~Country)
ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = City, color = City)) + #by countries
geom_line() +
facet_wrap(~Country) +
theme_bw()
ggsave(filename = "figures/perfect_graph.png", plot = perfect_graph)
perfect_graph <- ggplot(data = yearly_city_country_temp, aes(x = year, y = cityAverage, group = City, color = City)) + #by countries
geom_line() +
facet_wrap(~Country) +
theme_bw()
ggsave(filename = "figures/perfect_graph.png", plot = perfect_graph)
ggsave(filename = "figures/perfect_graph.png", plot = perfect_graph)
ggsave(filename = "figures/perfect_graph.png", plot = perfect_graph,
width = 800, height = 480)
ggsave(filename = "figures/perfect_graph.png", plot = perfect_graph,
width = 640, height = 480)
library(data.table)
as.data.table(read.table("clipboard", header = F))
dd <- as.data.table(read.table("clipboard", header = F))
dd[ , .N, .(V1, V2)]
dd2 <- dd[ , .N, .(V1, V2)]
library(tidyr)
dd2$N <- 1
spread(dd2, V2, N)
spread(dd2, V2, N, fill = 0)
dd3 <- spread(dd2, V2, N, fill = 0)
dde[ , lapply(.SDcols, mean)]
dd3[ , lapply(.SDcols, mean)]
dd3[ , lapply(.SDcol, mean)]
dd3[ , lapply(.SD, mean)]
dd3[ , lapply(.SD, mean)] * 100
ee <- as.data.table(read.table("clipboard", header = F))
ee2$N <- 1
ee
ee2 <- ee[ , .N, .(V1, V2)]
ee2$N <- 1
ee3 <- spread(ee2, V2, N, fill = 0)
ee3[ , lapply(.SD, mean)] * 100
dd3[ , lapply(.SD, mean)][ , c(2:7), with = F] * 100
read.table("clipboard", header = F, dec = ",")$V1
read.table("clipboard", header = F, dec = ",")$V1
weighted.mean(c(1,2,1,3), read.table("clipboard", header = F, dec = ",")$V1)
?weights
weights
rm(list = ls())
weights
vk_post <- as.data.table(read.csv2("VK_POST_ALL.csv", header = T, dec = ","))
setwd("C:\\Users\\pipo\\WORK")
library(data.table)
library(tidyr)
library(dplyr)
vk_post <- as.data.table(read.csv2("VK_POST_ALL.csv", header = T, dec = ","))
vk_post_main <- vk_post[ ,c(1,3,4,6,7,9:21), with = F]
vk_post_main
vk_post_main <- vk_post[ ,c(1,3,4,6,7,9:21), with = F]
levels(vk_post_main$Category)[1] <- NA  # recode #N/A to NA
names(vk_post_main)
lapply(vk_post_main[ , 10:14, with = F], sum) # sums by main vars
select(merged_vk_post_main, 1:4, 13:17) %>%
group_by(sex) %>%
summarise(photo_sum = sum(Фото),  # sum by sex
audio_sum = sum(Аудио),
video_sum = sum(Видео),
text_sum = sum(Текст),
file_sum = sum(Файл),
photo_per = mean(Фото),
audio_per = mean(Аудио),
video_per = mean(Видео),
text_per = mean(Текст),
file_per = mean(Файл)) %>% as.data.frame
questionnary <- as.data.table(read.csv2("massiv_PhilipMorris_final_w1.csv", header = T, dec = ","))
by_groups <- questionnary[ , names(questionnary)[c(110, 2, 112, 113)], with = F]
merged_vk_post_main <- merge(by_groups, vk_post_main, "NUM") # new data with segments
select(merged_vk_post_main, 1:4, 13:17) %>%
group_by(sex) %>%
summarise(photo_sum = sum(Фото),  # sum by sex
audio_sum = sum(Аудио),
video_sum = sum(Видео),
text_sum = sum(Текст),
file_sum = sum(Файл),
photo_per = mean(Фото),
audio_per = mean(Аудио),
video_per = mean(Видео),
text_per = mean(Текст),
file_per = mean(Файл)) %>% as.data.frame
tt <- read.table("clipboard", dec = ",")
tt
tt2 <- as.data.table(tt)
tt2[, .N]
tt2[, .N, V1]
tt2[, sum(V2), V1]
tt2
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1]
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1, V2]
?.SDcols
??.SDcols
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1, V2]
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1]
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1, .SDcols = V2]
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1, .SDcols = "V2"]
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1, .SDcols = V2]
tt2[,lapply(.SD,weighted.mean,w=V3),by=V1]
library(data.table)
T
dt <- data.table(sex = sample(1:2,10,T), food = sample(c("coffee", "tea"),10,T), price = sample(3:7,10,T))
dt
dt <- data.table(sex = sample(1:2,10,T), food = sample(c("coffee", "tea"),10,T), price = sample(3:7,10,T))
dt
wgt <- data.table(sex = 1:2, weight = c(0.7,1.2))
wgt
prop.table(dt$sex)
table(dt$sex)
prop.table(table(dt$sex))
wgt
ве
dt
read.table("clipboard")
read.table("clipboard", dec = ",")
df <- read.table("clipboard", dec = ",")
df
weighted.mean(df$V3, w = df$V2)
dt
dt[ , .N, food]
dt[ , .N, sex]
wgt
wgt
merge(dt, wgt, sex)
merge(dt, wgt, "sex")
dt[ , .N, sex]
dt[ , sum(weight), sex]
dt <- merge(dt, wgt, "sex")
dt[ , sum(weight), sex]
dt[ , sum(weight), (sex, food)]
dt[ , sum(weight), .(sex, food)]
dt[ , .N, .(sex, food)]
dt
dt <- data.table(sex = sample(1:2,10,T), food = sample(c("coffee", "tea"),10,T), price = sample(3:7,10,T))
wgt <- data.table(sex = 1:2, weight = c(0.7,1.2))
dt <- merge(dt, wgt, "sex")
dt
